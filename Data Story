{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Exploratory Data Analysis"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "I'll likely have to clean up my data a little bit more, but let's take a look at what I've got."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "sp500 = pd.read_csv(\"Data/SP500.csv\")\n",
    "indicators = pd.read_csv(\"Data/SP500indicators.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>MMM</th>\n",
       "      <th>ABT</th>\n",
       "      <th>ABBV</th>\n",
       "      <th>ACN</th>\n",
       "      <th>ATVI</th>\n",
       "      <th>AYI</th>\n",
       "      <th>ADBE</th>\n",
       "      <th>AMD</th>\n",
       "      <th>AAP</th>\n",
       "      <th>AES</th>\n",
       "      <th>...</th>\n",
       "      <th>WYNN</th>\n",
       "      <th>XEL</th>\n",
       "      <th>XRX</th>\n",
       "      <th>XLNX</th>\n",
       "      <th>XL</th>\n",
       "      <th>XYL</th>\n",
       "      <th>YUM</th>\n",
       "      <th>ZBH</th>\n",
       "      <th>ZION</th>\n",
       "      <th>ZTS</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1999-01-04</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1999-01-05</th>\n",
       "      <td>0.005745</td>\n",
       "      <td>0.001230</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-0.006455</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-0.021454</td>\n",
       "      <td>-0.011133</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-0.003890</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.002184</td>\n",
       "      <td>0.018503</td>\n",
       "      <td>0.042135</td>\n",
       "      <td>-0.004131</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.019138</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-0.001992</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1999-01-06</th>\n",
       "      <td>0.045575</td>\n",
       "      <td>-0.007609</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.017424</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-0.036459</td>\n",
       "      <td>-0.016018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.004716</td>\n",
       "      <td>0.018985</td>\n",
       "      <td>-0.008953</td>\n",
       "      <td>-0.057583</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.015172</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1999-01-07</th>\n",
       "      <td>-0.023309</td>\n",
       "      <td>-0.013091</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-0.005469</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.020996</td>\n",
       "      <td>0.006948</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-0.025975</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-0.004716</td>\n",
       "      <td>-0.004097</td>\n",
       "      <td>-0.007279</td>\n",
       "      <td>0.018362</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-0.005032</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-0.007337</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1999-01-08</th>\n",
       "      <td>0.004939</td>\n",
       "      <td>-0.003772</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-0.011954</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.014030</td>\n",
       "      <td>0.020203</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-0.037538</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-0.006933</td>\n",
       "      <td>-0.004938</td>\n",
       "      <td>0.000876</td>\n",
       "      <td>-0.042560</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.002620</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.002173</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 503 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                 MMM       ABT  ABBV  ACN      ATVI  AYI      ADBE       AMD  \\\n",
       "date                                                                           \n",
       "1999-01-04       NaN       NaN   NaN  NaN       NaN  NaN       NaN       NaN   \n",
       "1999-01-05  0.005745  0.001230   NaN  NaN -0.006455  NaN -0.021454 -0.011133   \n",
       "1999-01-06  0.045575 -0.007609   NaN  NaN  0.017424  NaN -0.036459 -0.016018   \n",
       "1999-01-07 -0.023309 -0.013091   NaN  NaN -0.005469  NaN  0.020996  0.006948   \n",
       "1999-01-08  0.004939 -0.003772   NaN  NaN -0.011954  NaN  0.014030  0.020203   \n",
       "\n",
       "            AAP       AES  ...  WYNN       XEL       XRX      XLNX        XL  \\\n",
       "date                       ...                                                 \n",
       "1999-01-04  NaN       NaN  ...   NaN       NaN       NaN       NaN       NaN   \n",
       "1999-01-05  NaN -0.003890  ...   NaN  0.002184  0.018503  0.042135 -0.004131   \n",
       "1999-01-06  NaN  0.000000  ...   NaN  0.004716  0.018985 -0.008953 -0.057583   \n",
       "1999-01-07  NaN -0.025975  ...   NaN -0.004716 -0.004097 -0.007279  0.018362   \n",
       "1999-01-08  NaN -0.037538  ...   NaN -0.006933 -0.004938  0.000876 -0.042560   \n",
       "\n",
       "            XYL       YUM  ZBH      ZION  ZTS  \n",
       "date                                           \n",
       "1999-01-04  NaN       NaN  NaN       NaN  NaN  \n",
       "1999-01-05  NaN  0.019138  NaN -0.001992  NaN  \n",
       "1999-01-06  NaN  0.015172  NaN  0.000000  NaN  \n",
       "1999-01-07  NaN -0.005032  NaN -0.007337  NaN  \n",
       "1999-01-08  NaN  0.002620  NaN  0.002173  NaN  \n",
       "\n",
       "[5 rows x 503 columns]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sp500.rename(columns={'Unnamed: 0':'date'}, inplace=True)\n",
    "sp500.set_index(\"date\")\n",
    "sp500 = sp500.set_index(\"date\")\n",
    "sp500 = sp500.apply(pd.to_numeric)\n",
    "sp500.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ticker</th>\n",
       "      <th>dimension</th>\n",
       "      <th>calendardate</th>\n",
       "      <th>reportperiod</th>\n",
       "      <th>lastupdated</th>\n",
       "      <th>accoci</th>\n",
       "      <th>assets</th>\n",
       "      <th>assetsavg</th>\n",
       "      <th>assetsc</th>\n",
       "      <th>assetsnc</th>\n",
       "      <th>...</th>\n",
       "      <th>sharesbas</th>\n",
       "      <th>shareswa</th>\n",
       "      <th>shareswadil</th>\n",
       "      <th>sps</th>\n",
       "      <th>tangibles</th>\n",
       "      <th>taxassets</th>\n",
       "      <th>taxexp</th>\n",
       "      <th>taxliabilities</th>\n",
       "      <th>tbvps</th>\n",
       "      <th>workingcapital</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2018-12-31</th>\n",
       "      <td>MMM</td>\n",
       "      <td>MRY</td>\n",
       "      <td>2018-12-31</td>\n",
       "      <td>2018-12-31</td>\n",
       "      <td>2019-04-26</td>\n",
       "      <td>-6.866000e+09</td>\n",
       "      <td>3.650000e+10</td>\n",
       "      <td>3.728200e+10</td>\n",
       "      <td>1.370900e+10</td>\n",
       "      <td>2.279100e+10</td>\n",
       "      <td>...</td>\n",
       "      <td>582287135.0</td>\n",
       "      <td>588500000.0</td>\n",
       "      <td>602000000.0</td>\n",
       "      <td>55.675</td>\n",
       "      <td>2.379200e+10</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1637000000</td>\n",
       "      <td>243000000.0</td>\n",
       "      <td>40.971</td>\n",
       "      <td>6.465000e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2017-12-31</th>\n",
       "      <td>MMM</td>\n",
       "      <td>MRY</td>\n",
       "      <td>2017-12-31</td>\n",
       "      <td>2017-12-31</td>\n",
       "      <td>2019-04-26</td>\n",
       "      <td>-7.026000e+09</td>\n",
       "      <td>3.798700e+10</td>\n",
       "      <td>3.511825e+10</td>\n",
       "      <td>1.427700e+10</td>\n",
       "      <td>2.371000e+10</td>\n",
       "      <td>...</td>\n",
       "      <td>595608108.0</td>\n",
       "      <td>597500000.0</td>\n",
       "      <td>612700000.0</td>\n",
       "      <td>52.982</td>\n",
       "      <td>2.453800e+10</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2679000000</td>\n",
       "      <td>310000000.0</td>\n",
       "      <td>41.150</td>\n",
       "      <td>6.590000e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-12-31</th>\n",
       "      <td>MMM</td>\n",
       "      <td>MRY</td>\n",
       "      <td>2016-12-31</td>\n",
       "      <td>2016-12-31</td>\n",
       "      <td>2019-04-26</td>\n",
       "      <td>-7.245000e+09</td>\n",
       "      <td>3.290600e+10</td>\n",
       "      <td>3.329350e+10</td>\n",
       "      <td>1.172600e+10</td>\n",
       "      <td>2.118000e+10</td>\n",
       "      <td>...</td>\n",
       "      <td>601466401.0</td>\n",
       "      <td>604700000.0</td>\n",
       "      <td>618700000.0</td>\n",
       "      <td>49.792</td>\n",
       "      <td>2.142000e+10</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1995000000</td>\n",
       "      <td>299000000.0</td>\n",
       "      <td>35.688</td>\n",
       "      <td>5.507000e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2015-12-31</th>\n",
       "      <td>MMM</td>\n",
       "      <td>MRY</td>\n",
       "      <td>2015-12-31</td>\n",
       "      <td>2015-12-31</td>\n",
       "      <td>2019-04-26</td>\n",
       "      <td>-6.359000e+09</td>\n",
       "      <td>3.288300e+10</td>\n",
       "      <td>3.204300e+10</td>\n",
       "      <td>1.098600e+10</td>\n",
       "      <td>2.189700e+10</td>\n",
       "      <td>...</td>\n",
       "      <td>615712937.0</td>\n",
       "      <td>625600000.0</td>\n",
       "      <td>637200000.0</td>\n",
       "      <td>48.392</td>\n",
       "      <td>2.103300e+10</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1982000000</td>\n",
       "      <td>332000000.0</td>\n",
       "      <td>34.245</td>\n",
       "      <td>3.868000e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2014-12-31</th>\n",
       "      <td>MMM</td>\n",
       "      <td>MRY</td>\n",
       "      <td>2014-12-31</td>\n",
       "      <td>2014-12-31</td>\n",
       "      <td>2019-04-26</td>\n",
       "      <td>-6.289000e+09</td>\n",
       "      <td>3.120900e+10</td>\n",
       "      <td>3.287550e+10</td>\n",
       "      <td>1.230300e+10</td>\n",
       "      <td>1.890600e+10</td>\n",
       "      <td>...</td>\n",
       "      <td>640818842.0</td>\n",
       "      <td>649200000.0</td>\n",
       "      <td>662000000.0</td>\n",
       "      <td>49.016</td>\n",
       "      <td>2.272400e+10</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2028000000</td>\n",
       "      <td>435000000.0</td>\n",
       "      <td>35.612</td>\n",
       "      <td>6.339000e+09</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 110 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           ticker dimension calendardate reportperiod lastupdated  \\\n",
       "date                                                                \n",
       "2018-12-31    MMM       MRY   2018-12-31   2018-12-31  2019-04-26   \n",
       "2017-12-31    MMM       MRY   2017-12-31   2017-12-31  2019-04-26   \n",
       "2016-12-31    MMM       MRY   2016-12-31   2016-12-31  2019-04-26   \n",
       "2015-12-31    MMM       MRY   2015-12-31   2015-12-31  2019-04-26   \n",
       "2014-12-31    MMM       MRY   2014-12-31   2014-12-31  2019-04-26   \n",
       "\n",
       "                  accoci        assets     assetsavg       assetsc  \\\n",
       "date                                                                 \n",
       "2018-12-31 -6.866000e+09  3.650000e+10  3.728200e+10  1.370900e+10   \n",
       "2017-12-31 -7.026000e+09  3.798700e+10  3.511825e+10  1.427700e+10   \n",
       "2016-12-31 -7.245000e+09  3.290600e+10  3.329350e+10  1.172600e+10   \n",
       "2015-12-31 -6.359000e+09  3.288300e+10  3.204300e+10  1.098600e+10   \n",
       "2014-12-31 -6.289000e+09  3.120900e+10  3.287550e+10  1.230300e+10   \n",
       "\n",
       "                assetsnc  ...    sharesbas     shareswa  shareswadil     sps  \\\n",
       "date                      ...                                                  \n",
       "2018-12-31  2.279100e+10  ...  582287135.0  588500000.0  602000000.0  55.675   \n",
       "2017-12-31  2.371000e+10  ...  595608108.0  597500000.0  612700000.0  52.982   \n",
       "2016-12-31  2.118000e+10  ...  601466401.0  604700000.0  618700000.0  49.792   \n",
       "2015-12-31  2.189700e+10  ...  615712937.0  625600000.0  637200000.0  48.392   \n",
       "2014-12-31  1.890600e+10  ...  640818842.0  649200000.0  662000000.0  49.016   \n",
       "\n",
       "               tangibles  taxassets      taxexp  taxliabilities   tbvps  \\\n",
       "date                                                                      \n",
       "2018-12-31  2.379200e+10        0.0  1637000000     243000000.0  40.971   \n",
       "2017-12-31  2.453800e+10        0.0  2679000000     310000000.0  41.150   \n",
       "2016-12-31  2.142000e+10        0.0  1995000000     299000000.0  35.688   \n",
       "2015-12-31  2.103300e+10        0.0  1982000000     332000000.0  34.245   \n",
       "2014-12-31  2.272400e+10        0.0  2028000000     435000000.0  35.612   \n",
       "\n",
       "            workingcapital  \n",
       "date                        \n",
       "2018-12-31    6.465000e+09  \n",
       "2017-12-31    6.590000e+09  \n",
       "2016-12-31    5.507000e+09  \n",
       "2015-12-31    3.868000e+09  \n",
       "2014-12-31    6.339000e+09  \n",
       "\n",
       "[5 rows x 110 columns]"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "indicators = indicators.drop('Unnamed: 0', axis = 1)\n",
    "indicators.rename(columns={'datekey':'date'}, inplace=True)\n",
    "indicators = indicators.set_index(\"date\")\n",
    "indicators.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "sp500 = sp500.drop('MMM', axis = 1) #Doing some wierd stuff"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "def get_dist_graph(data, column, bins = 1000):\n",
    "    fig, ax = plt.subplots(1, figsize=(15, 10))\n",
    "    # Filtering out non visual data\n",
    "    data_to_visualize = data[column][~data[column].isin([np.nan, np.inf, -np.inf])]\n",
    "    # Calculating stats\n",
    "    mean = data_to_visualize.mean()\n",
    "    std = data_to_visualize.std()\n",
    "    minimum = data_to_visualize.min()\n",
    "    maximum = data_to_visualize.max()\n",
    "    # Plotting\n",
    "    sns.distplot(data_to_visualize, bins = bins, label = 'Mean : ' + str(round(mean, 2)))\n",
    "    # Limits and mean line\n",
    "    plt.xlim(max(mean - (3*std), minimum), min(mean + (3*std), maximum))\n",
    "    plt.axvline(mean)\n",
    "    plt.legend()\n",
    "    #Title\n",
    "    plt.title('Distribution Graph of ' + column)\n",
    "    plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Plot of average log returns\n",
    "avgs = sp500.mean(axis=1, skipna = True)\n",
    "avgs = avgs.to_frame()\n",
    "avgs.columns = [\"Average Log-Returns\"]\n",
    "get_dist_graph(avgs, \"Average Log-Returns\" , bins = 300)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "ipo_date = [sp500[i].first_valid_index() for i in sp500]\n",
    "sums = sp500.sum(axis=0, skipna=True)\n",
    "sums = sums.tolist()\n",
    "sums_age = pd.DataFrame({'ipo_date' : ipo_date,\n",
    "             'sums' : sums})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots(1, figsize=(15, 10))\n",
    "plt.scatter(data=sums_age, x=ipo_date, y=sums, alpha=.75)\n",
    "plt.title(\"Sum of Log-Returns by First Available Date\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
